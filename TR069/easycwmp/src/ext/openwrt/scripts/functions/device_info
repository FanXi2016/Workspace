#!/bin/sh
# Copyright (C) 2012-2014 PIVA Software <www.pivasoftware.com>
# 	Author: MOHAMED Kallel <mohamed.kallel@pivasoftware.com>
# 	Author: AHMED Zribi <ahmed.zribi@pivasoftware.com>
# Copyright (C) 2011-2012 Luka Perkov <freecwmp@lukaperkov.net>

get_lan_device_entries()
{
	local nl="$1"
	local val=""
	local param="InternetGatewayDevice.LANDeviceNumberOfEntries"
	local permissions="0"
	local type="xsd:unsignedInt"

	case "$action" in
		get_value)
		val="1"
		;;
		get_name)
		[ "$nl" = "1" ] && return $E_INVALID_ARGUMENTS
		;;
		get_notification)
		easycwmp_get_parameter_notification "val" "$param"
		;;
	esac
	easycwmp_output "$param" "$val" "$permissions" "$type"
}

get_wan_device_entries()
{
	local nl="$1"
	local val=""
	local param="InternetGatewayDevice.WANDeviceNumberOfEntries"
	local permissions="0"
	local type="xsd:unsignedInt"

	case "$action" in
		get_value)
		ifconfig | grep usb0 > /dev/null
		if [ $? -eq 0 ];then
			val=1
		else
			val=0
		fi
		;;
		get_name)
		[ "$nl" = "1" ] && return $E_INVALID_ARGUMENTS
		;;
		get_notification)
		easycwmp_get_parameter_notification "val" "$param"
		;;
	esac
	easycwmp_output "$param" "$val" "$permissions" "$type"
}

get_device_info_specversion() {
	local nl="$1"
	local val=""
	local param="InternetGatewayDevice.DeviceInfo.SpecVersion"
	local permissions="0"

	case "$action" in
		get_value)
		val="1.0"
		;;
		get_name)
		[ "$nl" = "1" ] && return $E_INVALID_ARGUMENTS
		;;
		get_notification)
		easycwmp_get_parameter_notification "val" "$param"
		;;
	esac
	easycwmp_output "$param" "$val" "$permissions"
}

get_device_info_provisioningcode() {
	local nl="$1"
	local val=""
	local param="InternetGatewayDevice.DeviceInfo.ProvisioningCode"
	local permissions="1"

	case "$action" in
		get_value)
		easycwmp_get_parameter_value "val" "$param"
		;;
		get_name)
		[ "$nl" = "1" ] && return $E_INVALID_ARGUMENTS
		;;
		get_notification)
		easycwmp_get_parameter_notification "val" "$param"
		;;
	esac
	easycwmp_output "$param" "$val" "$permissions"
}

set_device_info_provisioningcode() {
	local val=$1
	local param="InternetGatewayDevice.DeviceInfo.ProvisioningCode"

	case "$action" in
		set_value)
			local len=`expr length "$val"`
			[ $len -gt 64 ] && return $E_INVALID_PARAMETER_VALUE
			local pcode=`echo $val | grep "^\([0-9A-Z]\{4\}\.\)\{0,12\}[0-9A-Z]\{4\}"`
			[ -z "$pcode" ] && return $E_INVALID_PARAMETER_VALUE
			easycwmp_set_parameter_value "$param" "$val"
			;;

		set_notification)
			set_notification_common_argument "$param" "$val"
 			return $?
			;;
	esac
}

get_device_info_manufacturer() {
	local nl="$1"
	local val=""
	local param="InternetGatewayDevice.DeviceInfo.Manufacturer"
	local permissions="0"

	case "$action" in
		get_value)
		val=`$UCI_GET webs_cfg.system.Manufacturer 2> /dev/null`
		;;
		get_name)
		[ "$nl" = "1" ] && return $E_INVALID_ARGUMENTS
		;;
		get_notification)
		easycwmp_get_parameter_notification "val" "$param"
		;;
	esac
	easycwmp_output "$param" "$val" "$permissions"
}

get_device_info_oui() {
	local nl="$1"
	local val=""
	local param="InternetGatewayDevice.DeviceInfo.ManufacturerOUI"
	local permissions="0"

	case "$action" in
		get_value)
		val="`easycwmp_get_device_oui`"
		;;
		get_name)
		[ "$nl" = "1" ] && return $E_INVALID_ARGUMENTS
		;;
		get_notification)
		easycwmp_get_parameter_notification "val" "$param"
		;;
	esac
	easycwmp_output "$param" "$val" "$permissions"
	return 0
}

get_device_info_model_name() {
	local nl="$1"
	local val=""
	local param="InternetGatewayDevice.DeviceInfo.ModelName"
	local permissions="0"

	case "$action" in
		get_value)
			val="H850"
			;;
		get_name)
			[ "$nl" = "1" ] && return $E_INVALID_ARGUMENTS
			;;
		get_notification)
			easycwmp_get_parameter_notification "val" "$param"
			;;
	esac
	easycwmp_output "$param" "$val" "$permissions"
}

get_device_info_description() {
	local nl="$1"
	local val=""
	local param="InternetGatewayDevice.DeviceInfo.Description"
	local permissions="0"
	case "$action" in
		get_value)
			val="H850 Home Gateway"
			;;
		get_name)
			[ "$nl" = "1" ] && return $E_INVALID_ARGUMENTS
			;;
		get_notification)
			easycwmp_get_parameter_notification "val" "$param"
			;;
	esac
	easycwmp_output "$param" "$val" "$permissions"
}

get_device_info_modem_firmware_version() {
	local nl="$1"
	local val=""
	local param="InternetGatewayDevice.DeviceInfo.ModemFirmwareVersion"
	local permissions="0"
	case "$action" in
		get_value)
			local temp=`cd /usr/share/easycwmp/oem;lua tr069_extend_api.lua GetSystemInfo`
			local errorval=`echo ${temp%%;*}`
			if [ "Error=0" == ${errorval} ]; then
				local tempval=${temp#*MODULEEXTVERSION=}
				val=${tempval%%;*}
			else
				return $E_INTERNAL_ERROR
			fi
			;;

		get_name)
			[ "$nl" = "1" ] && return $E_INVALID_ARGUMENTS
			;;

		get_notification)
			easycwmp_get_parameter_notification "val" "$param"
			;;
	esac
	easycwmp_output "$param" "$val" "$permissions"
}

get_device_info_product_class() {
	local nl="$1"
	local val=""
	local param="InternetGatewayDevice.DeviceInfo.ProductClass"
	local permissions="0"

	case "$action" in
		get_value)
		val=`$UCI_GET webs_cfg.system.DeviceName 2> /dev/null`
		;;
		get_name)
		[ "$nl" = "1" ] && return $E_INVALID_ARGUMENTS
		;;
		get_notification)
		easycwmp_get_parameter_notification "val" "$param"
		;;
	esac
	easycwmp_output "$param" "$val" "$permissions"
}

get_device_info_serial_number() {
	local nl="$1"
	local val=""
	local param="InternetGatewayDevice.DeviceInfo.SerialNumber"
	local permissions="0"

	case "$action" in
		get_value)
		#Modified by Tian Yiqing, Get serial number from NV, Start
		val=`mmi --sn -r|grep Result|awk '{print $3}'`	
		#Modified by Tian Yiqing, Get serial number from NV, end
		;;
		get_name)
		[ "$nl" = "1" ] && return $E_INVALID_ARGUMENTS
		;;
		get_notification)
		easycwmp_get_parameter_notification "val" "$param"
		;;
	esac
	easycwmp_output "$param" "$val" "$permissions"
}

get_device_info_hardware_version() {
	local nl="$1"
	local val=""
	local param="InternetGatewayDevice.DeviceInfo.HardwareVersion"
	local permissions="0"

	case "$action" in
		get_value)
		val=`/usr/bin/sqlite3 /jrd-resource/resource/sqlite3/user_info.db3 "select * from system_config where items in ('HardwareVersion')"|sed 's/^.*Version|//g'`
		;;
		get_name)
		[ "$nl" = "1" ] && return $E_INVALID_ARGUMENTS
		;;
		get_notification)
		easycwmp_get_parameter_notification "val" "$param"
		;;
	esac
	easycwmp_output "$param" "$val" "$permissions"
}

get_device_info_software_version() {
	local nl="$1"
	local val=""
	local param="InternetGatewayDevice.DeviceInfo.SoftwareVersion"
	local permissions="0"

	case "$action" in
		get_value)
		val=`grep 'External_Ver' /jrd-resource/resource/jrdcfg/config.xml | cut -d '>' -f 2 | cut -d '<' -f 1 | sed "s/^[ ]*//g" | sed "s/[ ]*$//g"`
		;;
		get_name)
		[ "$nl" = "1" ] && return $E_INVALID_ARGUMENTS
		;;
		get_notification)
		easycwmp_get_parameter_notification "val" "$param"
		;;
	esac
	easycwmp_output "$param" "$val" "$permissions"
	return 0
}

get_device_info_uptime() {
	local nl="$1"
	local val=""
	local param="InternetGatewayDevice.DeviceInfo.UpTime"
	local permissions="0"

	case "$action" in
		get_value)
		val=`cat /proc/uptime | awk -F "." '{ print $1 }'`
		;;
		get_name)
		[ "$nl" = "1" ] && return $E_INVALID_ARGUMENTS
		;;
		get_notification)
		easycwmp_get_parameter_notification "val" "$param"
		;;
	esac
	easycwmp_output "$param" "$val" "$permissions"
}

get_device_info_device_log() {
	local nl="$1"
	local val=""
	local param="InternetGatewayDevice.DeviceInfo.DeviceLog"
	local permissions="0"

	case "$action" in
		get_value)
		#if [ ${FLAGS_last} -eq ${FLAGS_TRUE} ]; then
		#	val=`dmesg | tail -n1`
		#else
		#	val=`dmesg | tail -n10`
		#fi
		val=`logread|tail -n10`
		;;
		get_name)
		[ "$nl" = "1" ] && return $E_INVALID_ARGUMENTS
		;;
		get_notification)
		easycwmp_get_parameter_notification "val" "$param"
		;;
	esac
	easycwmp_output "$param" "$val" "$permissions"
}

#set_device_info_device_log() {
#	local param="InternetGatewayDevice.DeviceInfo.DeviceLog"
#	local val="$1"
#
#	case "$action" in
#		set_value)
#			return $E_NON_WRITABLE_PARAMETER
#			;;
#		set_notification)
#			if [ $val -ge 0 -a $val -le 2 ];then
#				easycwmp_set_parameter_notification "$parm" "$val"
#			else
#				return $E_INVALID_PARAMETER_VALUE
#			fi
#			;;
#	esac
#}

get_device_info_object() {
	nl="$1"
	case "$action" in
		get_name)
		[ "$nl" = "0" ] && easycwmp_output "InternetGatewayDevice.DeviceInfo." "" "0"
		;;
	esac
}

get_device_info_config() {
	get_device_info_manufacturer "$1"
	get_device_info_oui "$1"
	get_device_info_model_name $1
	get_device_info_description $1
	get_device_info_modem_firmware_version $1
	get_device_info_product_class "$1"
	get_device_info_serial_number "$1"
	get_device_info_hardware_version "$1"
	get_device_info_software_version "$1"
	get_device_info_uptime "$1"
	get_device_info_device_log "$1"
	get_device_info_specversion "$1"
	get_device_info_provisioningcode "$1"
}

get_device_info() {
case "$1" in
	InternetGatewayDevice.)
		get_lan_device_entries 0
		get_wan_device_entries 0
		get_device_summary_info 0
		get_device_info_object 0
		get_device_info_config $2
		return 0
		;;

	InternetGatewayDevice.DeviceInfo.)
		get_device_info_object $2
		get_device_info_config 0
		return 0
		;;
	InternetGatewayDevice.DeviceSummary)
		get_device_summary_info $2
		return $?
		;;
	InternetGatewayDevice.LANDeviceNumberOfEntries)
		get_lan_device_entries $2
		return $?
		;;
	InternetGatewayDevice.WANDeviceNumberOfEntries)
		get_wan_device_entries $2
		return $?
		;;

	InternetGatewayDevice.DeviceInfo.SpecVersion)
		get_device_info_specversion "$2"
		return $?
		;;

	InternetGatewayDevice.DeviceInfo.ProvisioningCode)
		get_device_info_provisioningcode "$2"
		return $?
		;;

	InternetGatewayDevice.DeviceInfo.Manufacturer)
		get_device_info_manufacturer "$2"
		return $?
		;;

	InternetGatewayDevice.DeviceInfo.ManufacturerOUI)
		get_device_info_oui "$2"
		return $?
		;;

	InternetGatewayDevice.DeviceInfo.ModelName)
		get_device_info_model_name "$2"
		return $?
		;;

	InternetGatewayDevice.DeviceInfo.Description)
		get_device_info_description $2
		return $?
		;;

	InternetGatewayDevice.DeviceInfo.ModemFirmwareVersion)
		get_device_info_modem_firmware_version $2
		return $?
		;;

	InternetGatewayDevice.DeviceInfo.ProductClass)
		get_device_info_product_class "$2"
		return $?
		;;

	InternetGatewayDevice.DeviceInfo.SerialNumber)
		get_device_info_serial_number "$2"
		return $?
		;;

	InternetGatewayDevice.DeviceInfo.HardwareVersion)
		get_device_info_hardware_version "$2"
		return $?
		;;

	InternetGatewayDevice.DeviceInfo.SoftwareVersion)
		get_device_info_software_version "$2"
		return $?
		;;

	InternetGatewayDevice.DeviceInfo.UpTime)
		get_device_info_uptime "$2"
		return $?
		;;

	InternetGatewayDevice.DeviceInfo.DeviceLog)
		get_device_info_device_log "$2"
		return $?
		;;
esac
return $E_INVALID_PARAMETER_NAME
}

set_device_info() {
case "$1" in
	InternetGatewayDevice.|\
	InternetGatewayDevice.DeviceInfo.|\
	InternetGatewayDevice.WANDeviceNumberOfEntries|\
	InternetGatewayDevice.LANDeviceNumberOfEntries|\
	InternetGatewayDevice.DeviceInfo.Description|\
	InternetGatewayDevice.DeviceInfo.DeviceLog|\
	InternetGatewayDevice.DeviceInfo.HardwareVersion)
		set_node_readonly_and_reject_notification_info
		return $?
		;;

	InternetGatewayDevice.DeviceInfo.SpecVersion|\
	InternetGatewayDevice.DeviceInfo.Manufacturer|\
	InternetGatewayDevice.DeviceInfo.ManufacturerOUI|\
	InternetGatewayDevice.DeviceInfo.ProductClass|\
	InternetGatewayDevice.DeviceInfo.SerialNumber|\
	InternetGatewayDevice.DeviceInfo.SoftwareVersion|\
	InternetGatewayDevice.DeviceInfo.ModelName|\
	InternetGatewayDevice.DeviceInfo.ModemFirmwareVersion|\
	InternetGatewayDevice.DeviceInfo.UpTime)
		set_node_readonly_info "$1" "$2"
		return $?
		;;

	InternetGatewayDevice.DeviceInfo.ProvisioningCode)
		set_device_info_provisioningcode "$2"
		return $?
		;;
esac
return $E_INVALID_PARAMETER_NAME
}

build_instances_device_info() { return 0; }

add_object_device_info() { return $E_INVALID_PARAMETER_NAME; }

delete_object_device_info() { return $E_INVALID_PARAMETER_NAME; }
